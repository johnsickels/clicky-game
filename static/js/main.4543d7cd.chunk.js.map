{"version":3,"sources":["components/Header/index.js","components/Wrapper/index.js","components/Card/index.js","App.js","index.js"],"names":["Header","props","react_default","a","createElement","className","children","score","highscore","Wrapper","Object","assign","Card","onClick","clickCount","id","alt","name","src","image","App","state","cards","gameOver","_this","setState","console","log","this","forEach","card","count","alert","concat","find","o","i","sort","Math","random","_this2","Jumbotron_default","fluid","components_Header","components_Wrapper","map","components_Card","key","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"61DAeeA,SAXA,SAAAC,GAAK,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASJ,EAAMK,UAC9BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAAf,UACUJ,EAAMM,MADhB,eACmCN,EAAMO,qBCFhCC,MAJf,SAAiBR,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAAM,OAAAC,OAAA,CAAMN,UAAU,WAAcJ,YCSxBW,SAVF,SAAAX,GAAK,OAEhBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOQ,QAAS,kBAAMZ,EAAMa,WAAWb,EAAMc,MAC1Db,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKf,EAAMgB,KAAMC,IAAKjB,EAAMkB,6BCiExBC,6MA/DXC,MAAQ,CACJC,QACAf,MAAO,EACPC,UAAW,KAGfe,SAAW,WAWP,OAVIC,EAAKH,MAAMd,MAAQiB,EAAKH,MAAMb,WAC9BgB,EAAKC,SAAS,CAACjB,UAAWgB,EAAKH,MAAMd,OAAQ,WACzCmB,QAAQC,IAAIC,KAAKP,MAAMb,aAG/BgB,EAAKH,MAAMC,MAAMO,QAAQ,SAAAC,GACrBA,EAAKC,MAAQ,IAEjBC,MAAK,yBAAAC,OAA0BT,EAAKH,MAAMd,QAC1CiB,EAAKC,SAAS,CAAClB,MAAO,KACf,KAGXO,WAAa,SAAAC,GAETS,EAAKH,MAAMC,MAAMY,KAAK,SAACC,EAAGC,GACtB,GAAID,EAAEpB,KAAOA,EAAI,CACb,GAAuB,IAAnBO,EAAMc,GAAGL,MAMT,OALAT,EAAMc,GAAGL,MAAQT,EAAMc,GAAGL,MAAQ,EAClCP,EAAKC,SAAS,CAAElB,MAAOiB,EAAKH,MAAMd,MAAQ,GAAK,WAC3CmB,QAAQC,IAAIC,KAAKP,MAAMd,SAE3BiB,EAAKH,MAAMC,MAAMe,KAAK,kBAAMC,KAAKC,SAAW,MACrC,EAEPf,EAAKD,uFAMZ,IAAAiB,EAAAZ,KACL,OACI1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACqC,EAAAtC,EAAD,CAAWuC,OAAK,GACZxC,EAAAC,EAAAC,cAACuC,EAAD,CAAQpC,MAAOqB,KAAKP,MAAMd,MAAOC,UAAWoB,KAAKP,MAAMb,WAAvD,gBAEJN,EAAAC,EAAAC,cAACwC,EAAD,KACKhB,KAAKP,MAAMC,MAAMuB,IAAI,SAAAf,GAAI,OACtB5B,EAAAC,EAAAC,cAAC0C,EAAD,CACIhC,WAAY0B,EAAK1B,WACjBC,GAAIe,EAAKf,GACTgC,IAAKjB,EAAKf,GACVE,KAAMa,EAAKb,KACXE,MAAOW,EAAKX,mBApDtB6B,IAAMC,iBCHxBC,IAASC,OAAOjD,EAAAC,EAAAC,cAACgD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.4543d7cd.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nconst Header = props => (\n  <div className=\"jumbotron-fluid\">\n    <div className=\"container-fluid\">\n      <div className=\"title\">{props.children}</div>\n      <div className=\"scores\">\n        Score: {props.score} Highscore: {props.highscore}\n      </div>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n\n  <div className=\"card\" onClick={() => props.clickCount(props.id)}>\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n  </div>\n\n);\n\nexport default Card;\n","import React from \"react\";\nimport Header from \"./components/Header\";\n// import Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\nimport cards from \"./cards.json\";\nimport Card from \"./components/Card\";\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass App extends React.Component {\n    state = {\n        cards,\n        score: 0,\n        highscore: 0\n    };\n\n    gameOver = () => {\n        if (this.state.score > this.state.highscore) {\n            this.setState({highscore: this.state.score}, function() {\n                console.log(this.state.highscore);\n            });\n        }\n        this.state.cards.forEach(card => {\n            card.count = 0;\n        });\n        alert(`Game Over :( \\nscore: ${this.state.score}`);\n        this.setState({score: 0});\n        return true;\n    }\n\n    clickCount = id => {\n        // eslint-disable-next-line\n        this.state.cards.find((o, i) => {\n            if (o.id === id) {\n                if (cards[i].count === 0) {\n                    cards[i].count = cards[i].count + 1;\n                    this.setState({ score: this.state.score + 1 }, function () {\n                        console.log(this.state.score);\n                    });\n                    this.state.cards.sort(() => Math.random() - 0.5)\n                    return true;\n                } else {\n                    this.gameOver();\n                }\n            }\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Jumbotron fluid>\n                    <Header score={this.state.score} highscore={this.state.highscore}>Clicky Game</Header>\n                </Jumbotron>\n                <Wrapper>\n                    {this.state.cards.map(card => (\n                        <Card\n                            clickCount={this.clickCount}\n                            id={card.id}\n                            key={card.id}\n                            name={card.name}\n                            image={card.image}\n                        />\n                    ))}\n\n                </Wrapper>\n                {/*<Footer /> */}\n            </div>\n\n        )\n    };\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}